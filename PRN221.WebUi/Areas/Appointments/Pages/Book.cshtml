@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PRN221.WebUi.Areas.Appointments.Pages.Book

@{
    ViewData["Title"] = "Book Appointment";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Book an Appointment</h1>
<hr/>

<div class="row">
    <form method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group form-floating mb-3">
            <select asp-for="Appointment.ServiceId" class="form-control form-select" asp-items="ViewBag.Services" onchange="onServiceChange()">
                <option>Choose a service</option>
            </select>
            <label asp-for="Appointment.ServiceId">Service</label>
        </div>

        <div class="form-group form-floating mb-3">
            <select asp-for="Appointment.DoctorId" class="form-control form-select" asp-items="ViewBag.Doctors" onchange="checkFormValidity()">
                <option>Choose a doctor</option>
            </select>
            <label asp-for="Appointment.DoctorId">Doctor</label>
        </div>

        <div class="form-group form-floating mb-3">
            <input asp-for="Appointment.Date" type="date" class="form-control" onchange="loadTimeSlotsPartial(this.value)" disabled/>
            <label asp-for="Appointment.Date"></label>
            <span asp-validation-for="Appointment.Date" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <input asp-for="Appointment.Time" type="hidden"/>
            <div id="timeSlotsPartial">

            </div>
        </div>
        <div class="form-group mb-3">
            <label asp-for="Appointment.File">Medical Record</label>
            <div class="input-group">
                <input asp-for="Appointment.File" type="file" class="form-control" value="@Model.FilePath"/>
                @if (!string.IsNullOrEmpty(Model.FilePath))
                {
                    <a class="btn btn-outline-secondary" href="@(Url.Content("~/uploads/") + Model.FilePath)" download>Download</a>
                }
            </div>
            <span asp-validation-for="Appointment.File" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Confirm" class="btn btn-primary"/>
            <a class="btn btn-primary" asp-page="./Index">Back to List</a>
        </div>
    </form>
</div>

@section Scripts
{
    <script>
        function onServiceChange(){
            checkFormValidity();
            function fetchDoctors(){
                const serviceId = document.getElementById('Appointment_ServiceId').value;
            
                // Make AJAX request to fetch doctors based on the selected service
                $.ajax({
                    url: '/Appointments/Book?handler=DoctorsByService',
                    method: 'GET',
                    data: { serviceId: serviceId },
                    success: function (data) {
                        console.log(data);
                        const doctorSelect = document.getElementById('Appointment_DoctorId');
                        doctorSelect.innerHTML = '';
            
                        // Parse JSON data if it's a string
                        if (typeof data === 'string') {
                            data = JSON.parse(data);
                        }
            
                        // Check if data is an array before using forEach
                        if (Array.isArray(data)) {
                            data.forEach(function (doctor) {
                                const option = document.createElement('option');
                                option.value = doctor.value;
                                option.text = doctor.text;
                                doctorSelect.appendChild(option);
                            });
                        } else {
                            console.error('Response data is not an array:', data);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            }
            fetchDoctors();
        }
        
        function onDoctorChange(){
            checkFormValidity();    
        }
        
        function checkFormValidity() {
            const serviceSelect = document.getElementById('Appointment_ServiceId');
            const doctorSelect = document.getElementById('Appointment_DoctorId');
            const dateInput = document.getElementById('Appointment_Date');
    
            if (serviceSelect.value !== '' && doctorSelect.value !== '') {
                dateInput.removeAttribute('disabled');
            } else {
                dateInput.setAttribute('disabled', 'disabled');
            }
        }
        function loadTimeSlotsPartial(date) {
            $.ajax({
                url: '/Appointments/Book',
                method: 'GET',
                data: {
                    handler: 'AvailableSlotsPartial',
                    date: date,
                    doctorId: jQuery('#Appointment_DoctorId').val()
                },
                success: function(response) {
                    document.getElementById('timeSlotsPartial').innerHTML = response;
                    console.log(response);
                },
                error: function(xhr, status, error) {
                    // Handle errors
                    console.error(xhr.responseText);
                }
            });
        }
        function timeSlotSelected(button) {
            const selectedTime = $(button).data('time');
            $('#Appointment_Time').val(selectedTime);
            $('.time-slot-btn').removeClass('btn-primary').addClass('btn-outline-primary');
            $(button).removeClass('btn-outline-primary').addClass('btn-primary');
        };
    </script>
}